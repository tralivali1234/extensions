<Window x:Class="Signum.Windows.Authorization.TypeRules"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:m="clr-namespace:Signum.Windows;assembly=Signum.Windows"
    xmlns:m2="clr-namespace:Signum.Windows.Extensions"
    xmlns:se="clr-namespace:Signum.Entities;assembly=Signum.Entities"
    xmlns:seb="clr-namespace:Signum.Entities.Basics;assembly=Signum.Entities"
    xmlns:seb2="clr-namespace:Signum.Entities.Basics;assembly=Signum.Entities.Extensions"
    xmlns:auth="clr-namespace:Signum.Windows.Authorization"
    xmlns:d="clr-namespace:Signum.Entities.Authorization;assembly=Signum.Entities.Extensions"
    xmlns:sef="clr-namespace:Signum.Entities.Files;assembly=Signum.Entities.Extensions"
    m:Monitors.AdjustToMonitor="true"
    WindowStartupLocation="CenterOwner"    
    TextOptions.TextFormattingMode="Display"
    UseLayoutRounding="True" 
    x:Name="me" MinWidth="300" MinHeight="300" m:Common.TypeContext="{x:Type d:TypeRulePack}"
    FlowDirection="{DynamicResource FlowDirection}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="AuthResources.xaml"/>
                <ResourceDictionary Source="TreeViewColumnResources.xaml"/>
                <m:DesignTimeResourceDictionary Source="pack://application:,,,/Signum.Windows;Component/Resources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <DockPanel>
        <m:ButtonBar DockPanel.Dock="Top" SaveClick="btSave_Click" SaveVisible="True" ReloadClick="btReload_Click" ReloadVisible="True"/>
        <m:EntityLine m:Common.Route="Role" m:Common.IsReadOnly="True" DockPanel.Dock="Top"/>
        <m:ValueLine m:Common.Route="Strategy" DockPanel.Dock="Top" />
        <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
            <Label Content="Find Type"/>
            <TextBox x:Name="tbType" VerticalAlignment="Center" Margin="5,0,5,0" KeyUp="tbType_KeyUp"  KeyDown="tbType_KeyDown" MinWidth="200"/>
            <Button Focusable="False" x:Name="btRemove" Style="{StaticResource RoundButton}" Click="btRemove_Click" Content="{StaticResource Remove}"  ToolTip="{m:Loc {x:Static sef:FileMessage.Remove}}"/>
        </StackPanel>
        <ScrollViewer x:Name="swTop" Grid.Column="1"
                      DockPanel.Dock="Top"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Disabled"
                      Margin="1,1,18,1">
            <Grid x:Name="grid" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>

                    <ColumnDefinition Width="38" />
                    <ColumnDefinition Width="38" />
                    <ColumnDefinition Width="38" />
                    <ColumnDefinition Width="38" />

                    <ColumnDefinition Width="58" />
                    <ColumnDefinition Width="58" />
                    <ColumnDefinition Width="58" />
                    <ColumnDefinition Width="58" />
                </Grid.ColumnDefinitions>
                <GridViewColumnHeader Style="{DynamicResource GridViewColumnHeaderStyle1}" Grid.Column="0" Content="{m:LocType {x:Type seb:TypeEntity}}"/>

                <GridViewColumnHeader Style="{DynamicResource GridViewColumnHeaderStyle1}" Grid.Column="1" Content="{m:Loc {x:Static d:TypeAllowedBasic.Create}}" />
                <GridViewColumnHeader Style="{DynamicResource GridViewColumnHeaderStyle1}" Grid.Column="2" Content="{m:Loc {x:Static d:TypeAllowedBasic.Modify}}" />
                <GridViewColumnHeader Style="{DynamicResource GridViewColumnHeaderStyle1}" Grid.Column="3" Content="{m:Loc {x:Static d:TypeAllowedBasic.Read}}" />
                <GridViewColumnHeader Style="{DynamicResource GridViewColumnHeaderStyle1}" Grid.Column="4" Content="{m:Loc {x:Static d:TypeAllowedBasic.None}}" />

                <GridViewColumnHeader Style="{DynamicResource GridViewColumnHeaderStyle1}" Grid.Column="5" Content="Overriden" />
                <GridViewColumnHeader Style="{DynamicResource GridViewColumnHeaderStyle1}" Grid.Column="6" Content="{m:LocTypePlural {x:Type seb:PropertyRouteEntity}}" />
                <GridViewColumnHeader Style="{DynamicResource GridViewColumnHeaderStyle1}" Grid.Column="7" Content="{m:LocTypePlural {x:Type se:OperationSymbol}}" />
                <GridViewColumnHeader Style="{DynamicResource GridViewColumnHeaderStyle1}" Grid.Column="8" Content="{m:LocTypePlural {x:Type seb:QueryEntity}}" />
            </Grid>
        </ScrollViewer>

        <TreeView 
            ScrollViewer.VerticalScrollBarVisibility="Visible"
            HorizontalAlignment="Stretch" 
            VerticalAlignment="Stretch"
            Width="Auto" 
            Height="Auto" 
            x:Name="treeView"
            ScrollViewer.ScrollChanged="treeView_ScrollChanged">
            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem" BasedOn="{StaticResource TreeViewItemStyle1}">
                    <Setter Property="IsExpanded" Value="True"/>
                    <Setter Property="Visibility" Value="{Binding Selected, Converter={x:Static m:Converters.BoolToVisibility}}"/>
                    <Setter Property="Background" Value="{Binding SelectedFind, Converter={x:Static auth:TypeRuleConverter.BoolToYellowOrTransparent}}"/>
                </Style>
            </TreeView.ItemContainerStyle>

            <TreeView.ItemTemplateSelector>
                <m:TypeDataTemplateSelector>
                    <HierarchicalDataTemplate DataType="{x:Static auth:TypeRules.GroupType}" ItemsSource="{Binding SubNodes}">
                        <TextBlock HorizontalAlignment="Left" FontWeight="SemiBold"  VerticalAlignment="Center" Text="{Binding Name}"/>
                    </HierarchicalDataTemplate>

                    <HierarchicalDataTemplate DataType="{x:Static auth:TypeRules.RuleType}" ItemsSource="{Binding Conditions}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>

                                <ColumnDefinition Width="38" />
                                <ColumnDefinition Width="38" />
                                <ColumnDefinition Width="38" />
                                <ColumnDefinition Width="38" />

                                <ColumnDefinition Width="58" />
                                <ColumnDefinition Width="58" />
                                <ColumnDefinition Width="58" />
                                <ColumnDefinition Width="58" />
                            </Grid.ColumnDefinitions>
                            <StackPanel Orientation="Horizontal" Grid.Column="0">
                                <Button Style="{StaticResource RoundButton}"  Content="{StaticResource Create}" Visibility="{Binding CanAdd, Converter={x:Static m:Converters.BoolToVisibility}}" Click="addCondition_Click"/>
                                <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding Resource.CleanName}"/>
                            </StackPanel>
                            <ToggleButton HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Path=Allowed.Create}" Style="{StaticResource SphereRadioButton}" Background="Cyan" Grid.Column="1"/>
                            <ToggleButton HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Path=Allowed.Modify}" Style="{StaticResource SphereRadioButton}" Background="GreenYellow" Grid.Column="2" />
                            <ToggleButton HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Path=Allowed.Read}" Style="{StaticResource SphereRadioButton}" Background="Yellow" Grid.Column="3"  />
                            <ToggleButton HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Path=Allowed.None}" Style="{StaticResource SphereRadioButton}" Background="Red" Grid.Column="4"  />
                            <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" IsEnabled="False" IsChecked="{Binding Path=Overriden,Mode=OneWay}" Grid.Column="5"  />

                            <Button Click="properties_Click" x:Name="properties" Style="{StaticResource ThinButtonStyle}" ToolTip="{m:Loc {x:Static d:AuthMessage.View}}" Grid.Column="6" RenderOptions.BitmapScalingMode="NearestNeighbor" 
                                    Visibility="{Binding Properties, Converter={x:Static m:Converters.NullToVisibility}}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Grid>
                                    <Image Source="../Images/property.png" Stretch="None"  SnapsToDevicePixels="True"/>
                                    <Ellipse Fill="{Binding Properties, Converter={x:Static m2:Converters.ThumbnailBrush}}" 
                                             Stroke="{Binding Properties, Converter={x:Static m2:Converters.ThumbnailStroke}}" 
                                             Width="6" Height="6" HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
                                </Grid>
                            </Button>
                            <Button Click="operations_Click" x:Name="operations" Style="{StaticResource ThinButtonStyle}" ToolTip="{m:Loc {x:Static d:AuthMessage.View}}" Grid.Column="7" RenderOptions.BitmapScalingMode="NearestNeighbor" 
                                    Visibility="{Binding Operations, Converter={x:Static m:Converters.NullToVisibility}}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Grid>
                                    <Image Source="../Images/operation.png" Stretch="None" SnapsToDevicePixels="True"/>
                                    <Ellipse Fill="{Binding Operations, Converter={x:Static m2:Converters.ThumbnailBrush}}"
                                             Stroke="{Binding Operations, Converter={x:Static m2:Converters.ThumbnailStroke}}" 
                                             Width="6" Height="6" HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
                                </Grid>
                            </Button>
                            <Button Click="queries_Click" x:Name="queries" Style="{StaticResource ThinButtonStyle}" ToolTip="{m:Loc {x:Static d:AuthMessage.View}}" Grid.Column="8" RenderOptions.BitmapScalingMode="NearestNeighbor"
                                    Visibility="{Binding Queries, Converter={x:Static m:Converters.NullToVisibility}}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Grid>
                                    <Image Source="../Images/query.png" Stretch="None" SnapsToDevicePixels="True"/>
                                    <Ellipse Fill="{Binding Queries, Converter={x:Static m2:Converters.ThumbnailBrush}}"
                                             Stroke="{Binding Queries, Converter={x:Static m2:Converters.ThumbnailStroke}}" 
                                             Width="6" Height="6" HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
                                </Grid>
                            </Button>
                        </Grid>
                    </HierarchicalDataTemplate>


                    <HierarchicalDataTemplate DataType="{x:Static auth:TypeRules.ConditionType}">
                        <Grid Background="#2C5899FF">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>

                                <ColumnDefinition Width="38" />
                                <ColumnDefinition Width="38" />
                                <ColumnDefinition Width="38" />
                                <ColumnDefinition Width="38" />

                                <ColumnDefinition Width="58" />
                                <ColumnDefinition Width="58" />
                                <ColumnDefinition Width="58" />
                                <ColumnDefinition Width="58" />
                            </Grid.ColumnDefinitions>
                            <StackPanel Orientation="Horizontal" Grid.Column="0">
                                <Button Style="{StaticResource RoundButton}"  Content="{StaticResource Remove}" Click="removeCondition_Click"/>
                                <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding ConditionNiceToString}" Grid.Column="0"/>
                            </StackPanel>
                            <ToggleButton HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Path=Allowed.Create}" Style="{StaticResource SphereRadioButton}" Background="Cyan" Grid.Column="1"/>
                            <ToggleButton HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Path=Allowed.Modify}" Style="{StaticResource SphereRadioButton}" Background="GreenYellow" Grid.Column="2" />
                            <ToggleButton HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Path=Allowed.Read}" Style="{StaticResource SphereRadioButton}" Background="Yellow" Grid.Column="3"  />
                            <ToggleButton HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Path=Allowed.None}" Style="{StaticResource SphereRadioButton}" Background="Red" Grid.Column="4"  />
                        </Grid>
                    </HierarchicalDataTemplate>
                </m:TypeDataTemplateSelector>
            </TreeView.ItemTemplateSelector>


        </TreeView>
    </DockPanel>
</Window>
