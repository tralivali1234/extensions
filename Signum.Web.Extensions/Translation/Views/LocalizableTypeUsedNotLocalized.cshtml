@using System.Collections.Concurrent
@using System.Reflection
@using Signum.Web.Translation.Controllers
@using System.Globalization;
@using Signum.Entities.Translation
@using Signum.Entities.Authorization
@using Signum.Engine.Translation
@using System.Collections.Concurrent;
@model ConcurrentDictionary<Lite<RoleEntity>, ConcurrentDictionary<CultureInfo, ConcurrentDictionary<Type, TypeOccurrentes>>>

@{
    ViewBag.Title = TranslationMessage.CodeTranslations.NiceToString();

    Lite<RoleEntity> selectedRole = ViewBag.Role;
}
@Html.ScriptCss("~/Translation/Content/Translation.css")

@if (Model == null)
{
    <h2>@TranslationMessage.NothingToTranslate.NiceToString()</h2>
}
else
{
    <h2>@ViewBag.Title</h2>

    <div>
        <div class="dropdown">
            <button onclick="document.getElementById('myDropdown').classList.toggle('show');" class="dropbtn">
                @if (selectedRole == null)
                {@TranslationMessage.All.NiceToString() }
                else
                { @selectedRole.ToString() }
            </button>
            <div id="myDropdown" class="dropdown-content">
                @foreach (var role in Model.Keys)
                {
                    @Html.ActionLink(role.ToString(), (TranslationController tc) => tc.LocalizableTypeUsedNotLocalized(role))
                }
            </div>
        </div>
    </div>


    <table class="st">

        <tr>
            <th>Role </th>
            <th>Culture Info </th>

            <th>Type</th>
            <th>Type Occurrences</th>
            <th>Member Info</th>
            <th>Member Occurrences</th>
        </tr>

        @foreach (var reDict in Model)
        {
            foreach (var ci in reDict.Value)
            {
                foreach (var ty in ci.Value)
                {
                    foreach (var m in ty.Value.Members)
                    {
                        <tr>
                            <td>@reDict.Key.ToString() </td>
                            <td>@ci.Key.ToString() </td>
                            <td>@ty.Key.ToString() </td>
                            
                            <td>@ty.Value.Ocurrences</td>
                            <td>@m.Key.Name</td>
                            <td>@m.Value.ToString() </td>
                        </tr>
                    }
                }
            }
        }
    </table>
}