@model Dictionary<Assembly, Dictionary<CultureInfo, TranslationFile>>
@using System.Reflection
@using Signum.Web.Translation.Controllers
@using System.Globalization;
@using Signum.Entities.Translation
@using Signum.Entities.Authorization
@using Signum.Engine.Translation
@{
    ViewBag.Title = TranslationMessage.CodeTranslations.NiceToString();

    Lite<RoleEntity> selectedRole = ViewBag.Role;
}
@Html.ScriptCss("~/Translation/Content/Translation.css")

@if (Model.IsEmpty())
{
    <h2>@TranslationMessage.NothingToTranslate.NiceToString()</h2>
}
else
{
    <h2>@ViewBag.Title</h2>

    var langs = Model.First().Value.Keys;


    <div>
        <div class="dropdown">
            <button onclick="document.getElementById('myDropdown').classList.toggle('show');" class="dropbtn">
                @if (selectedRole == null)
                {@TranslationMessage.All.NiceToString() }
                else
                { @selectedRole.ToString() }
            </button>
            <div id="myDropdown" class="dropdown-content">

                @Html.ActionLink(TranslationMessage.All.NiceToString(), (TranslationController tc) => tc.Index(null))

                @foreach (var role in TranslationLogic.NonLocalized.Keys)
                {
                    @Html.ActionLink(role.ToString(), (TranslationController tc) => tc.Index(role))
                }
            </div>
        </div>
    </div>


    <table class="st">
        <tr>
            <th></th>
            <th>@TranslationMessage.All.NiceToString()</th>
            @foreach (var ci in langs)
            {
                <th>@ci.Name</th>
            }
        </tr>
        @foreach (var assembly in Model)
        {
            <tr>
                <th>@assembly.Key.GetName().Name</th>
                <td>
                    @Html.ActionLink(TranslationMessage.View.NiceToString(), (TranslationController tc) => tc.View(assembly.Key.GetName().Name, null, false, null))
                </td>
                @foreach (var tf in assembly.Value.Values)
                {
                    <td>
                        @Html.ActionLink(TranslationMessage.View.NiceToString(), (TranslationController tc) => tc.View(tf.Assembly.GetName().Name, tf.CultureInfo.Name, false, null))
                        <br />
                        @if (!tf.IsDefault && tf.CultureInfo.IsNeutralCulture)
                        {
                            @Html.ActionLink(TranslationMessage.Sync.NiceToString(), (TranslationController tc) => tc.Sync(tf.Assembly.GetName().Name, tf.CultureInfo.Name, false, selectedRole), new { @class = "status-" + tf.Status(selectedRole).ToString() })
                        }
                    </td>
                }
            </tr>
        }
    </table>
}