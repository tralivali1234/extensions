@Html.ScriptCss("~/authAdmin/Content/AuthAdmin.css")
@using Signum.Engine.Authorization
@using (var tc = Html.TypeContext<QueryRulePack>())
{
    <div class="form-compact">
        @Html.EntityLine(tc, f => f.Role)
        @Html.ValueLine(tc, f => f.Strategy)
        @Html.EntityLine(tc, f => f.Type)
    </div>
    <table class="sf-auth-rules" id="queries">
        <thead>
            <tr>
                <th>
                    @typeof(Signum.Entities.Basics.QueryEntity).NiceName()
                </th>
                <th>
                    @AuthAdminMessage.Allow.NiceToString()
                </th>
                <th>
                    @AuthAdminMessage.Deny.NiceToString()
                </th>
                <th>
                    @AuthAdminMessage.Overriden.NiceToString()
                </th>
            </tr>
        </thead>
        @foreach (var item in tc.TypeElementContext(p => p.Rules))
        {
            <tr>
                <td>
                    @Html.Span(null, item.Value.Resource.Key)
                    @Html.Hidden(item.Compose("Resource_Key"), item.Value.Resource.Key)
                    @Html.Hidden(item.Compose("AllowedBase"), item.Value.AllowedBase)
                </td>
                <td>
                    @if (!item.Value.CoercedValues.Contains(QueryAllowed.Allow))
                    {
                        <a class="sf-auth-chooser sf-auth-allowed">
                            @Html.RadioButton(item.Compose("Allowed"), "Allow", item.Value.Allowed == QueryAllowed.Allow)
                        </a>
                    }
                </td>
                <td>
                    @if (!item.Value.CoercedValues.Contains(QueryAllowed.EmbeddedOnly))
                    {
                        <a class="sf-auth-chooser sf-auth-allowed">
                            @Html.RadioButton(item.Compose("Allowed"), "EmbeddedOnly", item.Value.Allowed == QueryAllowed.EmbeddedOnly)
                        </a>
                    }
                </td>
                <td>
                    @if (!item.Value.CoercedValues.Contains(QueryAllowed.None))
                    {
                        <a class="sf-auth-chooser sf-auth-not-allowed">
                            @Html.RadioButton(item.Compose("Allowed"), "None", item.Value.Allowed == QueryAllowed.None)
                        </a> 
                    }
                </td>
                <td>
                    @Html.CheckBox(item.Compose("Overriden"), item.Value.Overriden, new { disabled = "disabled", @class = "sf-auth-overriden" })
                </td>
            </tr>
        }
    </table>
} 