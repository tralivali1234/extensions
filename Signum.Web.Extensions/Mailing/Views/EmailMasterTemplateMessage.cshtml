@using Signum.Entities.Mailing
@using Signum.Entities.Translation
@using Signum.Engine.Translation
@using Signum.Entities
@using Signum.Engine
@using Signum.Web
@using Signum.Entities.DynamicQuery
@using Signum.Web.Mailing
@using (var ec = Html.TypeContext<EmailMasterTemplateMessageEmbedded>())
{
    <div class="sf-email-template-message">
        <input type="hidden" class="sf-tab-title" value="@(ec.Value.CultureInfo?.ToString())" />
        
        @Html.EntityCombo(ec, e => e.CultureInfo, vl =>
        {
            vl.LabelText = EmailTemplateViewMessage.Language.NiceToString();
        })
        
        <div class="sf-template-message-insert-container">
            <input type="button" class="sf-button sf-master-template-insert-content" value="@(EmailTemplateViewMessage.InsertMessageContent.NiceToString())" />
        </div>

        @Html.ValueLine(ec, e => e.Text, vl =>
        {
            vl.FormGroupStyle = FormGroupStyle.None;
            vl.ValueLineType = ValueLineType.TextArea;
            vl.ValueHtmlProps["style"] = "width:100%; height:180px;";
            vl.ValueHtmlProps["class"] = "sf-rich-text-editor sf-email-template-message-text";
        })
        
        <script>
            $(function () {
               @(MailingClient.Module["initHtmlEditorMasterTemplate"](ec.SubContext(e => e.Text).Prefix, UICulture))
            });
        </script>
    </div>
}