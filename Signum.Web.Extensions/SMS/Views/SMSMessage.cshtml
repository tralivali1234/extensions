@using Signum.Engine
@using Signum.Entities.SMS;
@using Signum.Web;
@using Signum.Utilities;
@using Signum.Web.SMS;

@Html.ScriptCss("~/SMS/Content/SMS.css")

@using (var e = Html.TypeContext<SMSMessageEntity>())
{   
    @Html.ValueLine(e, s => s.MessageID, vl =>
    {
        vl.Visible = !e.Value.IsNew;
        vl.ReadOnly = true; 
    })
    @Html.EntityLine(e, s => s.Template, vl =>
    {
        vl.Create = false;
        vl.Remove = false;
        vl.HideIfNull = true;
    })
    @Html.ValueLine(e, s => s.Certified, vl => vl.ReadOnly = (e.Value.State != SMSMessageState.Created))
    @Html.ValueLine(e, s => s.DestinationNumber, vl => vl.ReadOnly = !e.Value.IsNew)

    <div class="sf-sms-edit-container">
        @Html.ValueLine(e, s => s.Message, vl =>
        {
            vl.ValueLineType = ValueLineType.TextArea;
            vl.ValueHtmlProps["cols"] = "30";
            vl.ValueHtmlProps["rows"] = "6";
            vl.ValueHtmlProps["class"] = "sf-sms-msg-text";
            vl.ReadOnly = (!e.Value.EditableMessage || e.Value.State != SMSMessageState.Created);
            vl.WriteHiddenOnReadonly = true;
        })
        @if (e.Value.State == SMSMessageState.Created && e.Value.EditableMessage)
        {
            <div class="sf-sms-characters-left">
                <p><span>@SMSCharactersMessage.RemainingCharacters.NiceToString()</span>: <span class="sf-sms-chars-left"></span></p>
            </div>
            @Html.FormGroup(e, "", "", new HtmlTag("input").Attr("type", "button").Attr("value", SMSCharactersMessage.RemoveNonValidCharacters.NiceToString()).Class("btn sf-button sf-sms-remove-chars").ToHtml())
        }
    </div>
    <br />
    @Html.ValueLine(e, s => s.From, vl => vl.ReadOnly = (e.Value.State != SMSMessageState.Created))

    if (e.Value.State != SMSMessageState.Created)
    {
        @Html.ValueLine(e, s => s.SendDate, vl => vl.ReadOnly = true)
        @Html.ValueLine(e, s => s.State, vl => vl.ReadOnly = true)
    }
}

<script>
    @(SMSClient.Module["init"](Url.Action<SMSController>(s => s.RemoveNoSMSCharacters("")), 
    Url.Action<SMSController>(s => s.GetDictionaries())))
</script>
