@using Signum.Entities.UserAssets
@using Signum.Web.UserAssets
@using Signum.Entities.Basics
<h2>@UserAssetMessage.ImportUserAssets.NiceToString()
</h2>
<br />
@if (ViewBag.Message != null)
{
    <h3>@ViewBag.Message</h3>
}
else if (Model == null)
{
    using (Html.BeginForm((UserAssetController uac) => uac.ImportFile(), new { enctype = "multipart/form-data", encoding = "multipart/form-data" }))
    {
    <input type="file" name="xmlFile" />
    <input type="submit" value="Upload" class="sf-button" />
    }
}
else
{
    <h3>@UserAssetMessage.SelectTheEntitiesToOverride.NiceToString()</h3>
   

    using (Html.BeginForm((UserAssetController uac) => uac.ImportConfirm()))
    {

        using (var e = Html.TypeContext<UserAssetPreviewModel>())
        { 
    @Html.Hidden("Document", ViewData["Document"])
    <table>
        <thead>
            <tr>
                <td>@Html.PropertyNiceName((UserAssetPreviewLineEmbedded l) => l.Action)</td>
                <td>@Html.PropertyNiceName((UserAssetPreviewLineEmbedded l) => l.OverrideEntity)</td>
                <td>@Html.PropertyNiceName((UserAssetPreviewLineEmbedded l) => l.Type)</td>
                <td>@Html.PropertyNiceName((UserAssetPreviewLineEmbedded l) => l.Text)</td>
            </tr>
        </thead>

        @foreach (var item in e.TypeElementContext(a => a.Lines))
        {
            
            <tr>
                <td>@item.Value.Action.NiceToString()</td>
                <td>
                    @if (item.Value.OverrideVisible)
                    {
                        @Html.CheckBox(item.Compose("OverrideEntity"), item.Value.OverrideEntity)
                    }
                    @Html.Hidden(item.Compose("Guid"), item.Value.Guid)
                </td>
                <td>@item.Value.Type.ToType().NiceName()</td>
                <td>@item.Value.Text</td>
            </tr>
        }

    </table>
    <input type="submit" value="Upload" class="sf-button" />
        }
    }
}
