<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<ChartScript GroupBy="Always">
  <Columns>
    <Column DisplayName="Date" ColumnType="Date" IsGroupKey="true" />
    <Column DisplayName="Color" ColumnType="Magnitude" />
  </Columns>
  <Parameters>
    <Parameter Name="StartDate" Type="Enum" ValueDefinition="Sunday | Monday" />
    <Parameter Name="ColorInterpolate" Type="Enum" ValueDefinition="YlGn|YlGnBu|GnBu|BuGn|PuBuGn|PuBu|BuPu|RdPu|PuRd|OrRd|YlOrRd|YlOrBr|Purples|Blues|Greens|Oranges|Reds|Greys|PuOr|BrBG|PRGn|PiYG|RdBu|RdGy|RdYlBu|Spectral|RdYlGn" />
    <Parameter Name="ColorScale" Type="Enum" ValueDefinition="ZeroMax | MinMax | Sqrt  | Log" />
  </Parameters>
  <Icon FileName="calendar.png"><![CDATA[iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAA5BJREFUeNrsWF1LVEEYfs/ZzVZzWyXQDFPEbKFItItExQjUEDGDuojqTroSyqBf0UVEbZfd1IUIRlHRBrV9YGlChFopfmBsJn4sfuSa2+qeM9M7s2dN95zJ/UiRZV+ZnbPPzDnzzPM+M54diVIK2zlk2OaRJBhvmEUNTdfuqQFq2ngC1PASVr0toQqSBBKWUM0xGa/xj/WyplvgSOEe5dKFqh3ha0JIUDaZ5IqyUhAtIkkjRLCd9SEEQMUPhVBQFAKqqoKiYo3fA4qKhWEkiOG1QgkQFe/Dem5Fhe6eMcZlJ5bliAiyIDigEcH92elQV54PnnkfJ/l9YhGqSveBe8LLv/v8Cnzsn4RzJ+0w7lkES4oZBt1z8PDtCCepIjGVP/uv0lptw+KJmKAoo+xZjNyD16M4CVQMB2QE7z8fXFWpIMcKP6YX4U57HxTlZkBNWR5XTtVUJWsnToOENQUjS7Fod+SzxjorMw3OnCjEawrP3rt528U6O1ei+8sk/PKtQG6WFZrPFkOqxQwD32ZXU74+KxKSxWeiDaJaJCJi3Guo2NSsD1pfDKHfKFeFxd1HXyFAVI4dyN0NY1NeuNn6Cez5mWiJAn4fDZ+6FJSDEY+O4LpZsllLoLJUUKL5J5haBQmFCDY1HuK3LfkD0NEzDnl7rdBy/iikoYL9ozN6cmvSRRQlOoJENiEBFShhpIB7jXsHyQ2PzcGAewY9xdRTIIAdrt54w9v5CtX6NV93aQttI19jf9kcHUGTfwk6XV2akpLOlVS3B9J/7ouGWxXuiSwTNmsqHDucQ9uNM0kNS1tbm1fUthmFjcd2sHBcFltwa99yRONte4LmjW5wOp2bzrS+vl6KmSCL6qJ5XfurkUyoLk7R459XoDz1sQ7/8Ps0lJNbelxuiS3FJPivR3jj/8ZD48WkoGs4w7CPq2/ZEO/yNRrj0pX/70EWVVk9uvZ3nlIhXpH2xJB0Bb0tJJ14q3itJ5gqRiHCY0lxXB6sOfhT7z/0pQgXpliAJ/ZGzeqXQzbDdxAR3rl0Kio87lVcueuprp0Ndjy7V4d3TJdAJTj0/eGysH9ipzikllGEZm+kVjT94yZYa1/QtTP/1ZZY9HivX2gJEZ74KTZerUG1DFMssIQIj4tgQ0ODlHyjjkVB9jvc4XB4t4qgx+Nxhh8c8V9+wtMrSQqdldiMzkw2IRi5BeSzHBHB5AlrkuAWxR8BBgCRXe1Dl1jEbAAAAABJRU5ErkJggg==]]></Icon>
  <Script><![CDATA[function DrawChart(chart, data)
{  
  var day = d3.timeFormat("%w"),
    week = d3.timeFormat("%U"),
    format = d3.timeFormat("%Y-%m-%d");
   
  if(data.parameters["StartDate"] == "Monday")
  {
    var oldWeek = week;
    var oldDay = day; 
    
    day = function(d) {
       var old = oldDay(d); 
       if(old == 0)
           return 6;
        
       return old - 1;
    }
    
    week = function(d) 
    {
        if(oldDay(d) == 0)
          return oldWeek(d) - 1;
        return oldWeek(d);
    } 
  }
  
  var scaleFunc = scaleFor(data.columns.c1, data.rows.map(function(r){return r.c1;}), 0, 1, data.parameters["ColorScale"]);

  var colorInterpolate = data.parameters["ColorInterpolate"];
  var colorInterpolation = ChartUtils.getColorInterpolation(colorInterpolate); 
  var color = function(v){return colorInterpolation(scaleFunc(v)); }
  
  var minDate = d3.min(data.rows, function(r){return new Date(r.c0) });
  var maxDate = d3.max(data.rows, function(r){return new Date(r.c0) });
 
  var numDaysX = 53;
  var numDaysY = ((maxDate.getFullYear() - minDate.getFullYear() + 1) * (7 + 1));
  
  var horizontal = (numDaysX > numDaysY) == (width > height);
  
  var cellSizeX = (width - 20)  / (horizontal? numDaysX: numDaysY);
  var cellSizeY = (height - 20) / (horizontal? numDaysY: numDaysX);
  var cellSize = Math.min(cellSizeX, cellSizeY); 
  
  function cleanDate(d){
    var str = d.toJSON();

     var index = str.lastIndexOf('.'); 
     if (index == -1)
       throw Error(". not found");

     return str.substring(0, index);
  }
  
  var yRule = rule({
    _1: '*',
    title: 14,
    _2: 4,
    content: (horizontal? numDaysY : numDaysX) * cellSize,
    _4: '*',
  }, height);
  //yRule.debugY(chart);
  
  var xRule = rule({
    _1: '*',
    title: 14,
    _2: 4,
    content: (horizontal? numDaysX : numDaysY) * cellSize,
    _4: '*',
  }, width);
  //xRule.debugX(chart);
  
  var svg = chart.append('svg:g').attr("transform", translate(xRule.start("content"), yRule.start("content")))
    .enterData(d3.range(minDate.getFullYear(), maxDate.getFullYear() + 1), "g")
    .attr("transform", function(yr){      
      return horizontal? translate(0, (yr - minDate.getFullYear()) * (cellSize * (7 + 1))):
                         translate((yr - minDate.getFullYear()) * (cellSize * (7 + 1)), 0);});

  svg.append("text")
  .attr("transform", horizontal? translate(-6, cellSize * 3.5) + rotate(-90) :
                                 translate(cellSize * 3.5, -6))
    .attr("text-anchor", "middle")
    .text(String);

  var groups = data.rows.toObject(r => r.c0.key);
  
  var rect = svg.selectAll("rect.day")
     .data(function(d) { return d3.utcDays(new Date(Date.UTC(d, 0, 1)), new Date(Date.UTC(d + 1, 0, 1))); })
     .enter().append("rect")
     .attr("stroke","#ccc")
     .attr("fill",function(d) {   
       var r = groups[cleanDate(d)];
       return r == undefined ? "#fff": color(r.c1.key);})
     .attr("width", cellSize)
     .attr("height", cellSize)
     .attr("x", function(d) { return (horizontal? week(d): day(d)) * cellSize; })
     .attr("y", function(d) { return (horizontal? (6-day(d)): week(d)) * cellSize; })
     .attr('data-click', function(d) { 
       var r = groups[cleanDate(d)];
       return r == undefined? undefined: getClickKeys(r, data.columns); 
     })
     .append("title")
    	.text(function(d) {  
          var r = groups[cleanDate(d)];
          return format(d) + (r == undefined ? "": ("("+r.c1.key+")"));
        });
  
  svg.selectAll("path.month")
    .data(function(d) { return d3.timeMonths(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })
    .enter().append("path")
    .attr("class", "month")
    .attr("stroke","#666")
    .attr("stroke-width", 1)
    .attr("fill","none")
    .attr("d", horizontal ? monthPathH: monthPathV);
  
  
  function monthPathH(t0) {
    var t1 = new Date(t0.getFullYear(), t0.getMonth() + 1, 0),
        d0 = +day(t0), w0 = +week(t0),
        d1 = +day(t1), w1 = +week(t1);
    return "M" + (w0) * cellSize + "," + (7-d0) * cellSize
      	 + "H" + (w0 + 1) * cellSize + "V" + 7 * cellSize
         + "H" + (w1 + 1) * cellSize + "V" + (7 - d1 - 1) * cellSize
         + "H" + (w1) * cellSize + "V" + 0
         + "H" + (w0) * cellSize + "Z";
  
   }
  
  function monthPathV(t0) {
    var t1 = new Date(t0.getFullYear(), t0.getMonth() + 1, 0),
        d0 = +day(t0), w0 = +week(t0),
        d1 = +day(t1), w1 = +week(t1);
    return "M" + d0 * cellSize + "," + (w0) * cellSize
      	 + "V" + (w0 + 1) * cellSize + "H" + 0
         + "V" + (w1+1) * cellSize + "H" + (d1+1) * cellSize
         + "V" + (w1) * cellSize + "H" + 7 * cellSize
         + "V" + (w0) * cellSize + "Z";
  
   }
}]]></Script>
</ChartScript>